<?php
/**
 * @var \Laminas\View\Renderer\PhpRenderer $this
 * @var \Omeka\Api\Representation\SitePageBlockRepresentation $block
 */

$html = $block->dataValue('html', '');

// The slug use the Omeka method process to slugify site and pages.
$slugify = function (string $string): string {
    if (extension_loaded('intl')) {
        $transliterator = \Transliterator::createFromRules(':: NFD; :: [:Nonspacing Mark:] Remove; :: NFC;');
        $slug = $transliterator->transliterate($string);
    } elseif (extension_loaded('iconv')) {
        $slug = iconv('UTF-8', 'ASCII//TRANSLIT//IGNORE', $string);
    } else {
        $slug = $string;
    }
    $slug = mb_strtolower($slug, 'UTF-8');
    $slug = preg_replace('/[^a-z0-9-]+/u', '-', $slug);
    $slug = preg_replace('/-{2,}/', '-', $slug);
    $slug = preg_replace('/-*$/', '', $slug);
    return $slug;
};

$dom = new \DOMDocument('1.1', 'UTF-8');
$dom->preserveWhiteSpace = false;
$dom->formatOutput = true;
@$dom->loadHTML('<div>' . $html . '</div>', LIBXML_BIGLINES | LIBXML_COMPACT | LIBXML_NOCDATA | LIBXML_HTML_NODEFDTD | LIBXML_NOENT | LIBXML_NOERROR | LIBXML_HTML_NOIMPLIED | LIBXML_NOWARNING | LIBXML_NSCLEAN);
if ($dom) {
    /** @var \DOMElement $heading */
    $headingTags = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];
    foreach ($headingTags as $headingTag) {
        $headings = $dom->getElementsByTagName($headingTag);
        foreach ($headings as $heading) {
            $text = strip_tags(trim((string) $heading->textContent));
            if (strlen($text)) {
                $id = $slugify($text);
                $heading->setAttributeNode(new \DOMAttr('id', $id));
            }
        }
    }
    $html = mb_substr((string) @$dom->saveHTML(), 5, -7);
}
?>

<?= $html ?>
